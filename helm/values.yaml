# Default values for tiledesk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
chatReplicaCount: 1
serverReplicaCount: 1

## Tiledesk Server
## ref: https://developer.tiledesk.com/
##

# optional properties for tiledesk-server docker installation but required for docker-compose used by clients (dashboard, ionic, widget)
FIREBASE_PRIVATE_KEY: -----BEGIN PRIVATE KEY-----\nCHANGEIT\n-----END PRIVATE KEY-----\n

###### ------DASHBOARD : START------ ######
WIDGET_LOCATION: /widget/
#EXTERNAL_BASE_URL: http://console.tiledesk.local
DIALOGFLOW_BOT_CREDENTIAL_URL: /api/modules/dialogflow/botcredendials/
RASA_BOT_CREDENTIAL_URL: /api/modules/rasa/botcredendials/
SERVER_BASE_URL: /api/
CHAT_BASE_URL: /chat/
BRAND_SRC: ''
REMOTE_JS_SRC: ''
APPS_URL: /api/modules/apps/
CDS_BASE_URL: /cds/
PROMO_BANNER_URL: ''
COMMUNITY_TEMPLATES_URL: /api/modules/templates/public/community
TEMPLATES_URL: /api/modules/templates/public/templates
TICKETING_EMAIL: example.com
###### ------DASHBOARD : END------ ######


###### ------DESIGN STUDIO : START------ ######
CDS_STORAGE_PREFIX: cds_sv5
PHONE_NUMBER: CHANGEIT
MQTT_MANAGER_URL: /mqtt/ws
###### ------DESIGN STUDIO : END------ ######



###### ------CHAT IONIC : START------ ######
WRITE_TO_BUTTON: true
ARCHIVED_BUTTON: true
SUPPORT_MODE: true
EMAIL_SECTION: true
FILE_UPLOAD_ACCEPT: "*/*"
WHATSAPP_TEMPLATES_BASE_URL: '/api/'
WHATSAPP_TEMPLATES_SECTION: false
###### ------CHAT IONIC : END------ ######


###### ------WIDGET : START------ ######
TRANSLATIONS_URL: /api/
ENBED_JS: true
###### ------WIDGET : END------ ######


###### ------SERVER : START------ ######
WS_SERVER_PATH: /
CHAT21_JWT_SECRET: tokenKey
CHAT21_ENABLED: true
#CHAT21_ADMIN_TOKEN: chat21-secret-orgAa,
CHAT21_ADMIN_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzNDU2MTBkNy03MmYxLTQ5OWUtODQzMS0xMTNhZWJkOWVmOTgiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjE0OTQzNDkyLCJleHAiOjE5MjU5ODM0OTIsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.KptGMsTKjd3wUiiP1GGSTYqW1XXK1vjSRJnetC3wjxU
CHAT21_URL: /chatapi/

# Email Config
EMAIL_BASEURL: http://console.tiledesk.local/dashboard
EMAIL_ENABLED: false
EMAIL_HOST: YOUR_EMAIL_HOST
EMAIL_USERNAME: YOUR_EMAIL_USERNAME
EMAIL_SECURE: false #defaults to 587 if is secure is false or 465 if true
EMAIL_PORT: 587
EMAIL_PASSWORD: CHANGEIT
EMAIL_FROM_ADDRESS: CHANGEIT
#EMAIL_BCC:

#Email template
EMAIL_TEMPLATE_CUSTOM: false #enable/disable custom EMAIL_TEMPLATE_* config env variables
EMAIL_ASSIGN_REQUEST_HTML_TEMPLATE: CHANGEIT
EMAIL_ASSIGN_MESSAGE_EMAIL_HTML_TEMPLATE: CHANGEIT
EMAIL_POOLED_REQUEST_HTML_TEMPLATE: CHANGEIT
EMAIL_POOLED_MESSAGE_EMAIL_HTML_TEMPLATE: CHANGEIT
EMAIL_NEW_MESSAGE_HTML_TEMPLATE: CHANGEIT
EMAIL_TICKET_HTML_TEMPLATE: CHANGEIT
EMAIL_FOLLOWER_HTML_TEMPLATE: CHANGEIT
EMAIL_DIRECT_HTML_TEMPLATE: CHANGEIT
EMAIL_RESET_PASSWORD_HTML_TEMPLATE: CHANGEIT
EMAIL_PASSWORD_CHANGED_HTML_TEMPLATE: CHANGEIT
EMAIL_EXUSER_INVITED_HTML_TEMPLATE: CHANGEIT
EMAIL_NEWUSER_INVITED_HTML_TEMPLATE: CHANGEIT
EMAIL_VERIFY_HTML_TEMPLATE: CHANGEIT
EMAIL_SEND_TRANSCRIPT_HTML_TEMPLATE: CHANGEIT
EMAIL_QUOTA_CHECKPOINT_REACHED_TEMPLATE: CHANGEIT
EMAIL_REDIRECT_TO_DESKTOP_TEMPLATE: CHANGEIT

SUPER_PASSWORD: superadmin

MONGODB_LOGS_URI: CHANGEIT
RESTHOOK_ENABLED: true
WEBHOOK_ORIGIN: http://api.tiledesk.local
SYNC_CHAT21_GROUPS: false
CREATE_INITIAL_DATA: true
CACHE_ENABLED: true
CACHE_ENGINE: redis
CACHE_REDIS_PORT: 6379
# CACHE_REDIS_HOST: my-tiledesk-redis-master
#CACHE_REDIS_PASSWORD: EMPTY

REQUEST_HISTORY_ENABLED: false
ACTIVITY_HISTORY_ENABLED: true
EMAIL_NOTIFICATION_ENABLED: true
GEO_SERVICE_ENABLED: true
ALLOW_REOPEN_CHAT: true
JOB_WORKER_ENABLED: true
QUEUE_ENABLED: true
#CLOUDAMQP_URL: amqp://ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2YWI3MzY1Yi1hYWRhLTRlNTktOWZjZS0yMDQwZDgyOTA4MTgiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNTk0Mzc3OTc4LCJleHAiOjE2OTY5Njk5NzgsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.g2YL6RZp5SuLcQyBTYf4cn9SnRIyifNb1f1-Si1inbs@localhost:5672?heartbeat=60
QUEUE_CREDENTIAL: ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJhYjE4NjM2YS02ZWJmLTQ1ZTEtOGZiMS1kOGE3MjA0NWQ0NDMiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjk3MDA3ODk3LCJleHAiOjIwMDgwNDc4OTcsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.iX8bC2jJzUIdHXSKgFIzw24Mv2NvtG6kpBrB86SqZrQ
JOB_TOPIC_EXCHANGE: changeit
JOB_TOPIC_EXCHANGE_TRAIN: changeit
GLOBAL_SECRET: nodeauthsecret

GLOBAL_SECRET_OR_PRIVATE_KEY: "" #if value is an empty string node evaluates it as an undefined env variable. If you want to use Private Key please set GLOBAL_SECRET_ALGORITHM=RS256. You can generate the private key with: openssl genrsa -out tiledesk-jwt-private.pem 2048
GLOBAL_SECRET_OR_PUB_KEY: "" #if value is an empty string node evaluates it an undefined env variable. You can export the public key with : openssl rsa -in tiledesk-jwt-private.pem -pubout > tiledesk-jwt-public.pem
GLOBAL_SECRET_ALGORITHM: HS256  #if you want to use Asymmetric keys (Public and Private) set this to RS256.

CHATBOT_TEMPLATES_API_URL: /modules/templates/public/templates

# APPS_ACCESS_TOKEN_SECRET: nodeauthsecret
BOOT_LOADING: true
META_GRAPH_URL: https://graph.facebook.com/v14.0/
FB_APP_ID: changeit
FB_APP_SECRET: changeit
MESSENGER_VERIFY_TOKEN: changeit
WHATSAPP_LOG: false
MESSENGER_LOG: false
# TILEBOT_LOG: false
WRITE_LOG_TO_MONGODB: false
LOG_MONGODB_LEVEL: info
JWT_HISTORY_ENABLED: false
TRIGGER_ENABLED: true
TRIAL_MODE_ENABLED: false
EMAIL_REPLY_ENABLED: false
EMAIL_INBOUND_DOMAIN: ""
# BOT_DIALOGFLOW_ENDPOINT: ""
DISABLE_SEND_OFFLINE_EMAIL: false
# BOT_RASA_ENDPOINT: ""
OPENAI_ENDPOINT: CHANGEIT
GPTKEY: CHANGEIT
KB_ENDPOINT: CHANGEIT
# KB_ENDPOINT_QA: CHANGEIT
# KB_ENDPOINT_TRAIN: CHANGEIT
TELEGRAM_API_URL: https://api.telegram.org/bot
TELEGRAM_FILE_URL: https://api.telegram.org/file/bot
TELEGRAM_LOG: info
QUOTES_ENABLED: false
HUBSPOT_ENDPOINT: https://api.hubapi.com/crm/v3/
WS_HISTORY_REQUESTS_LIMIT: 100
TRAINER_LOG: info
#VOICE CHANNEL
VOICE_LOG: info
BASE_POOLING_DELAY: 25
MAX_POLLING_TIME: 30000
#SMS CHANNEL
SMS_LOG: info
JWT_SECRET_KEY_LLM: CHANGEIT
# TILEBOT_ENDPOINT: CHANGEIT

CLOSE_BOT_UNRESPONSIVE_REQUESTS_ENABLE: true
ENABLE_REDIS_SESSION: false
DISABLE_SESSION_STRATEGY: true

PAYMENT_STRIPE_APIKEY: CHANGEIT
PAYMENT_STRIPE_SECRET: CHANGEIT
PAYMENT_STRIPE_API_SECRET_KEY: CHANGEIT

GOOGLE_SIGNIN_ENABLED: false
GOOGLE_CLIENT_ID: CHANGEIT
GOOGLE_CLIENT_SECRET: CHANGEIT
GOOGLE_CALLBACK_URL: CHANGEIT

QUEUE_EXCHANGE_TOPIC: tdserverex
QUEUE_NAME: tdserverqueue

SCHEDULER_ENABLED: false
#MULTI-WORKER
# CONVERSATION_TAGS_TASK_PREFETCH: 10

#CHATBOT
FLOW_LOGS_ENABLED: true
###### ------SERVER : END------ ######


###### ------CHAT21 SERVER : START------ ######
APP_ID: tilechat
#EXTERNAL_MQTT_BASE_URL: ws://console.tiledesk.local
WEBHOOK_ENABLED: true
WEBHOOK_EVENTS: message-sent,message-delivered
#CHAT21_MONGODB_URI: mongodb://mongo/chat21
#CHAT21_SRV_RABBITMQ_URI: amqp://ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2YWI3MzY1Yi1hYWRhLTRlNTktOWZjZS0yMDQwZDgyOTA4MTgiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNTk0Mzc3OTc4LCJleHAiOjE2OTY5Njk5NzgsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.g2YL6RZp5SuLcQyBTYf4cn9SnRIyifNb1f1-Si1inbs@rabbitmq:5672?heartbeat=60
CHAT21_SRV_RABBITMQ_CREDENTIAL: ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3NjMwYTAwZS0xNTUxLTQ3Y2ItYmEzMC02NGRlNjJmYmNmNGYiLCJzdWIiOiIwMS1PQlNFUlZFUiIsInNjb3BlIjpbInJhYmJpdG1xLnJlYWQ6Ki8qLyoiLCJyYWJiaXRtcS53cml0ZToqLyovKiIsInJhYmJpdG1xLmNvbmZpZ3VyZToqLyovKiJdLCJjbGllbnRfaWQiOiIwMS1PQlNFUlZFUiIsImNpZCI6IjAxLU9CU0VSVkVSIiwiYXpwIjoiMDEtT0JTRVJWRVIiLCJ1c2VyX2lkIjoiMDEtT0JTRVJWRVIiLCJhcHBfaWQiOiJ0aWxlY2hhdCIsImlhdCI6MTY5NjQ5MjI4NywiZXhwIjoyMDA3NTMyMjg3LCJhdWQiOlsicmFiYml0bXEiLCIwMS1PQlNFUlZFUiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJ1c2VyIn0.Lq0MLTYny7tIYVQ-KEDLlL-h7gAqofCfC2IDgI_0TOE
PRESENCE_ENABLED: true
CHAT21OBSERVER_CACHE_ENABLED: false
# CHAT21OBSERVER_REDIS_HOST: my-tiledesk-redis-master
CHAT21OBSERVER_REDIS_PORT: 6379
###### ------CHAT21 SERVER : END------ ######


###### ------CHAT21HTTP SERVER : START------ ######
JWT_KEY: tokenKey
CHAT21_HTTPSRV_RABBITMQ_CREDENTIAL: ignored:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiMjM1OTFmZS05N2FhLTRmNWQtOGVlOS0yNjQ2NzljYmM0M2YiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjk2NDkyMjg3LCJleHAiOjIwMDc1MzIyODcsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.Ee-TpAPsoC7Dm7qsbUojeHud3E4OCtJZkpupu_R0Aic
PUSH_ENABLED: false
PUSH_WH_WEBHOOK_TOKEN: WHFyAhecCMkYsvldLFWbSrJt7lAZFAmrp7O5QVMvGQsLVn9SkfT
PUSH_WH_NOTIFY_URL: http://localhost:8004/api/tilechat/notify
PUSH_WH_CHAT21_API_ADMIN_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI5NGFjNjNmNy1hOGM3LTRkZGMtYjJkNS01MWE2MjBmNTdhNmIiLCJzdWIiOiIxMDAtQVBJQURNSU4iLCJzY29wZSI6WyJyYWJiaXRtcS5yZWFkOiovKi8qIiwicmFiYml0bXEud3JpdGU6Ki8qLyoiLCJyYWJiaXRtcS5jb25maWd1cmU6Ki8qLyoiXSwiY2xpZW50X2lkIjoiMTAwLUFQSUFETUlOIiwiY2lkIjoiMTAwLUFQSUFETUlOIiwiYXpwIjoiMTAwLUFQSUFETUlOIiwidXNlcl9pZCI6IjEwMC1BUElBRE1JTiIsImFwcF9pZCI6InRpbGVjaGF0IiwiaWF0IjoxNjM3NzYxNDM0LCJleHAiOjE5NDg4MDE0MzQsImF1ZCI6WyJyYWJiaXRtcSIsIjEwMC1BUElBRE1JTiJdLCJraWQiOiJ0aWxlZGVzay1rZXkiLCJ0aWxlZGVza19hcGlfcm9sZXMiOiJhZG1pbiJ9.fLPrGArRlnyC04552oBsUjohf6l_BIpxwB847xWvugo
WEB_CLICK_ACTION: CHANGEIT #move to another section
MOBILE_CLICK_ACTION: CHANGEIT #move to another section
CHAT21HTTP_CACHE_ENABLED: false
# CHAT21HTTP_REDIS_HOST: my-tiledesk-redis-master
CHAT21HTTP_REDIS_PORT: 6379
###### ------CHAT21HTTP SERVER : END------ ######


###### ------COMMON CONF : START------ ######
FEATURES_TOKEN: PAY:F-ANA:F-ACT:F-TRI:T-GRO:F-DEP:F-OPH:F-MTL:T-CAR:F-V1L:T-PSA:F-MTT:T-SUP:T-LBS:T-APP:T-DEV:F-NOT:T-IPS:F-ETK:F-RAS:T-PPB:F-PET:F-MTS:F-TIL:T-DGF:T-NAT:T-HPB:F-TOW:T-KNB:F-BAN:F-AST:F-MON:F-CNT:F-AUT:F-WUN:F
WS_URL_RELATIVE: /ws/
#choose one of the following:
CHAT21_ENGINE: mqtt
#CHAT21_ENGINE: firebase
UPLOAD_ENGINE: native
PUSH_ENGINE: none
LOG_LEVEL: info
MONGOOSE_DEBUG: false
WORKER_LOG_LEVEL: info
AI_MODELS: CHANGEIT

AUTH_PERSISTENCE: LOCAL
CHAT_STORAGE_PREFIX: chat_sv5

FIREBASE_TENANT: tilechat
FIREBASE_APIKEY: CHANGEIT
FIREBASE_AUTHDOMAIN: CHANGEIT.firebaseapp.com
FIREBASE_DATABASEURL: https://CHANGEIT.firebaseio.com
FIREBASE_PROJECT_ID: CHANGEIT
FIREBASE_STORAGEBUCKET: CHANGEIT.appspot.com
FIREBASE_MESSAGINGSENDERID: CHANGEIT
FIREBASE_APP_ID: CHANGEIT
FIREBASE_VAPID: CHANGEIT
FIREBASE_CLIENT_EMAIL: CHANGEIT@CHANGEIT.com

MQTT_APPID: tilechat
MQTT_ENDPOINT: /mqws/ws
MQTT_APIENDPOINT: /chatapi/api

#CHAT21_URL: https://CHANGEIT.cloudfunctions.net
CHAT21_APPID: tilechat
DASHBOARD_URL: /dashboard/
API_BASEIMAGE_URL: /api/
API_URL: /api/
BASE_FILE_URL: /api/
BASE_URL: /
#MONGODB_URI: mongodb://tiledesk-mongo/tiledesk
###### ------COMMON CONF : END------ ######

###### ------DOLPHIN-SCHEDULER : START------ ######
DOLPHIN_TZ: "Europe/Rome"
###### ------DOLPHIN-SCHEDULER : START------ ######


server:
  ## Enable deployment of Tiledesk Server
  ##
  enabled: true
  resources: {}
  image:  
    repository: tiledesk.docker.scarf.sh/tiledesk/tiledesk-server
    tag: 2.13.13
  service:
    type: ClusterIP
    port: 80

serverworker:
  enabled: true ## Enable deployment of Tiledesk Server Worker
  resources: {} 
  image:  
    repository: tiledesk.docker.scarf.sh/tiledesk/tiledesk-server-worker
    tag: 2.13.13

dashboard:
  ## Enable deployment of Tiledesk Server
  ##da
  enabled: true
  resources: {}
  image:
    repository: tiledesk.docker.scarf.sh/tiledesk/tiledesk-dashboard
    tag: 2.7.122
  service:
    type: ClusterIP
    port: 80

cds:
  ## Enable deployment of Tiledesk Server
  ##
  enabled: true
  resources: {}
  image:
    repository: tiledesk.docker.scarf.sh/tiledesk/design-studio
    tag: 1.38.2
  service:
    type: ClusterIP
    port: 80

ionic:
  ## Enable deployment of Tiledesk Server
  ##
  enabled: true
  resources: {}
  image:
    repository: chat21/chat21-ionic
    tag: 3.4.21
  service:
      type: ClusterIP
      port: 80
    # pullPolicy: IfNotPresent
 
webwidget:
  ## Enable deployment of Tiledesk Server
  ##
  enabled: true
  resources: {}
  image:
    repository: chat21/chat21-web-widget
    tag: 5.0.103
    # pullPolicy: Always
  service:
      type: ClusterIP
      port: 80

c21httpsrv:
  ## Enable deployment of Chat21 http Server
  ##
  enabled: true
  resources: {}
  image:  
    repository: chat21/chat21-http-server
    tag: 0.2.37
    # pullPolicy: IfNotPresent  
  service:    
    type: ClusterIP
    port: 80
    
c21srv:
  ## Enable deployment of Chat21 Server
  ##
  enabled: true
  resources: {}
  image:  
    repository: chat21/chat21-server
    tag: 0.2.53
    #tag: 0.2.41
    # pullPolicy: IfNotPresent  

imagePullSecrets: #[]
  - name: tiledesk-enterprise-image-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


service: #do not remove used by ingress-proxy-nginx
  type: LoadBalancer
  port: 80

ingress:
  enabled: true  
  annotations:
    #kubernetes.io/ingress.class: nginx #deprecated
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/firebase-messaging-sw.js /chat/firebase-messaging-sw.js last;
  hosts:
    hostip: 
      name:
      enabled: true
      paths: 
        - path: /api/(.*)
          service: server
        - path: /ws/(.*)
          service: server
        - path: /dashboard/(.*)
          service: dashboard
        - path: /cds/(.*)
          service: cds
        - path: /chat/(.*)
          service: ionic
        - path: /widget/(.*)
          service: webwidget
        - path: /widget-config.json
          service: webwidget
        - path: /mqws/(.*)
          service: rabbitmq
          servicePort: 15675
        - path: /mqtt/(.*)
          service: rabbitmq
          servicePort: 15675
          enabled: true
        - path: /chatapi/(.*)
          service: c21httpsrv
    hostconsole:
      name: console.tiledesk.local
      enabled: false
      paths: 
        - path: /api/(.*)
          service: server
        - path: /ws/(.*)
          service: server
        - path: /dashboard/(.*)
          service: dashboard
        - path: /cds/(.*)
          service: cds
        - path: /chat/(.*)
          service: ionic
        - path: /widget/(.*)
          service: webwidget
        - path: /widget-config.json
          service: webwidget
        - path: /mqws/(.*)
          service: rabbitmq
          servicePort: 15675
        - path: /mqtt/(.*)
          service: rabbitmq
          servicePort: 15675
          enabled: true
        - path: /chatapi/(.*)
          service: c21httpsrv
    hostapi: 
      name: api.tiledesk.local
      enabled: false
      paths: 
        - path: /(.*)
          service: server
    hostrtm: 
      name: rtm.tiledesk.local
      enabled: false
      paths: 
        - path: /(.*)
          service: server
    hostwidget:
      name: widget.tiledesk.local 
      enabled: false
      paths: 
        - path: /(.*)
          service: webwidget

  tls: []
    #  - secretName: tiledesk-tls-secret
    #    hosts:
    #      - console.tiledesk.local
    #      - api.tiledesk.local


# ## Enable persistence using Persistent Volume Claims
# ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
# ##
# persistence:
#   enabled: false
#   ## parse data Persistent Volume Storage Class
#   ## If defined, storageClassName: <storageClass>
#   ## If set to "-", storageClassName: "", which disables dynamic provisioning
#   ## If undefined (the default) or set to null, no storageClassName spec is
#   ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
#   ##   GKE, AWS & OpenStack)
#   ##
#   # storageClass: "-"
#   accessMode: ReadWriteOnce
#   size: 8Gi

#
# Redis chart configuration
#
redis:
  enabled: true	
  image:
    repository: bitnamilegacy/redis
  sentinel:
    image:
      repository: bitnamilegacy/redis-sentinel
  metrics:
    image:
      repository: bitnamilegacy/redis-exporter
  volumePermissions:
    image:
      repository: bitnamilegacy/os-shell
  sysctl:
    image:
      repository: bitnamilegacy/os-shell
  architecture: standalone
  # master:
  #   livenessProbe:
  auth:
    enabled: false

##
## MongoDB chart configuration
##
## https://github.com/bitnami/charts/blob/master/bitnami/mongodb/values.yaml
##
mongodb:
  enabled: true
  global:
    security:
      allowInsecureImages: true
  tls:
    image:
      repository: bitnamilegacy/nginx
  externalAccess:
    autoDiscovery:
      image:
        repository: bitnamilegacy/kubectl
  volumePermissions:
    image:
      repository: bitnamilegacy/os-shell
  metrics:
    image:
      repository: bitnamilegacy/mongodb-exporter
  image:
    repository: bitnamilegacy/mongodb
  nameOverride: mongodb

  # replicaSet: 
  #   enabled: false
  auth:
    enabled: false
  ## If the password is not specified, MongoDB will generate a random password
  ##
  # mongodbRootPassword:
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    resourcePolicy: "keep"
    size: 8Gi

postgresql:
  enabled: false
  global:
    security:
      allowInsecureImages: true
  image:
    repository: bitnamilegacy/postgresql
  volumePermissions:
    image:
      repository: bitnamilegacy/os-shell
  metrics:
    image:
      repository: bitnamilegacy/postgres-exporter
      
rabbitmq: #consumer_timeout = 31622400000
  #fullnameOverride: rabbitmq
  enabled: true
  global:
    security:
      allowInsecureImages: true
  image:
    repository: bitnamilegacy/rabbitmq
  volumePermissions:
    image:
      repository: bitnamilegacy/os-shell
  replicaCount: 1
  # maxAvailableSchedulers: 3
  # onlineSchedulers: 3
  metrics:
    # enabled: false
    enabled: true
  # resources:
  #   requests: 
  #     cpu: 4
  #     memory: 8000M
  livenessProbe:
    enabled: false
    # enabled: true
    # initialDelaySeconds: 240 #x2
    # timeoutSeconds: 40
    # periodSeconds: 6
    # failureThreshold: 6
    # successThreshold: 1
  readinessProbe:
    enabled: false
    # enabled: true
    # initialDelaySeconds: 20 #x2
    # timeoutSeconds: 40
    # periodSeconds: 60
    # failureThreshold: 3
    # successThreshold: 1
  auth:
    username: rabbitmq
    password: rabbitmq-password-changeit
    erlangCookie: erlangCookie
  service:
     type: ClusterIP
     extraPorts: 
      - name: mqtt-tcp
        port: 1883
        targetPort: 1883
      - name: mqtt-web
        port: 15675
        targetPort: 15675   
  extraPlugins: "rabbitmq_mqtt rabbitmq_web_mqtt rabbitmq_auth_backend_oauth2 rabbitmq_federation_management rabbitmq_stomp"
  extraConfiguration: |-
    mqtt.listeners.tcp.default = 1883
    ## Default MQTT with TLS port is 8883
    # mqtt.listeners.ssl.default = 8883

    # anonymous connections, if allowed, will use the default
    # credentials specified here
    mqtt.allow_anonymous  = true
    mqtt.default_user     = guest
    mqtt.default_pass     = guest

    mqtt.vhost            = /
    mqtt.exchange         = amq.topic
    # 24 hours by default
    mqtt.subscription_ttl = 86400000
    mqtt.prefetch         = 10
  advancedConfiguration: |-
    [
        % Enable auth backend
        {rabbit, [
            {auth_backends, [rabbit_auth_backend_oauth2]}
        ]},

        % Set a resource server ID. Will require all scopes to be prefixed with rabbitmq.
        {rabbitmq_auth_backend_oauth2, [
            {resource_server_id, <<"rabbitmq">>},
            % Set up a legacy signing key
            {key_config, [
                {default_key, <<"legacy-token-key">>},
                {signing_keys, #{
                    <<"legacy-token-key">> =>
                        {map, #{
                            <<"alg">> => <<"HS256">>,
                            <<"value">> => <<"tokenKey">>,
                            <<"kty">> => <<"MAC">>}
                        } % end map
                    } % end signing_keys map
                } % end signing_keys
            ]} % end key_config
        ]} % end rabbitmq_auth_backend_oauth2
    ].

resources: {}
  # Unused. See resources under specific services: server, dashboard, etc.
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
